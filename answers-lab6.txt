Q1.  Currently when the queue is full, I return an error code which I have added.  Then when I'm actually trying to send, I do a while loop checking if the returned value is 0.  This should be similar to what we do for sys_ipc_try_send because the environment will have to retry. 

Currently the transmission ring is, if it is free (the DD bit is set), then we memcpy the data into the tx_pkt_buf at the empty spot.  We then set the len and the status (so it's no longer free).  We also set the Report Status and End of Packets in the tx_array[tdt].cmd.  

We then move onto the next spot in the queue.  We loop around by taking the mod of E1000_TXD.  

Q2.  Currently I have a ring for the recieve.  I set my tail to 127 and head to 0 as there are 128 descriptors.  However in my function, I start at tail = 0 because I (+1 %128) at the beginning of the call.  

This should receive all packets in order because it then updates the tail at the end of each call.  This way we will continue to scan.  When we reach a DD that is not set, we say that our ring is empty.  Here I return an error.  Thus like in the transmit, when our returned integer is not postive, we know we are at empty and we must try again.  
Q3.  The web page served by JOS's web server says 

This file came from JOS.
Cheesy web page!.  

Q4.  It took approximately.  

3 days for Transmit
2 hour to code Receive (very similar to Transmit in terms of set up)
2 days to debug Receive
4 hours to do part Web Server

Haven't started doing challenge yet. 



